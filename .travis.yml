language: cpp
sudo: required
dist: bionic
addons:
  coverity_scan:
    project:
      name: LandOfTheRair/core2
      description: Back-end for land of the rair
    notification_email: kingoipo@gmail.com
    build_command_prepend: cmake
    build_command: make
    branch_pattern: coverity_scan
  sonarcloud:
    organization: "landoftherair"
matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        update: true
        sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
        packages:
          - gcc-9
          - g++-9
          - cmake
          - binutils
          - libgoogle-glog-dev
          - libdouble-conversion-dev
    env:
      - MAKEFLAGS=-j2
      - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    before_script:
      - eval "${MATRIX_EVAL}"
    script:
      - ./compile_external_release.sh
      - cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_FLAGS="-DEXCLUDE_PSQL_TESTS" .
      - make
      - echo '{ "USE_SSL":false, "ADDRESS":"localhost", "PORT":8080, "DEBUG_LEVEL":"trace", "CONNECTION_STRING":"postgres://@localhost/", "TICK_LENGTH":100, "LOG_TICK_TIMES":true }' &> bin/config.json
      - bin/lotr_test
    after_script:
      - eval "$(ssh-agent -s)"
      - echo "$SSH_KEY" | base64 -d > test.zip
      - unzip test.zip
      - export TEMPFILE=$(mktemp)
      - echo "$SSH_KNOWN_HOSTS" > $TEMPFILE
      - ssh -o "UserKnownHostsFile $TEMPFILE" -i deploy_rsa lotr@${DEPLOY_SERVER} 'killall -s SIGINT lotr_back "'
      - sleep 1
      - scp -o "UserKnownHostsFile $TEMPFILE" -i deploy_rsa bin/lotr_backend lotr@${DEPLOY_SERVER}:/home/lotr/lotr_backend
      - ssh -o "UserKnownHostsFile $TEMPFILE" -i deploy_rsa lotr@${DEPLOY_SERVER} 'cp lotr_backend builds/${TRAVIS_COMMIT}'
      - ssh -o "UserKnownHostsFile $TEMPFILE" -i deploy_rsa lotr@${DEPLOY_SERVER} 'tmux new-session -d -s "myTempSession" /home/lotr/restart_lotr.sh'
